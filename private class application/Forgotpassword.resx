<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>